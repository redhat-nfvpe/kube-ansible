---

- name: Check for download complete semaphor
  stat:
    path: "{{ kubectl_home }}/.kube-binary-download-complete"
  register: download_complete_semaphor

- name: Delete existing binaries when necessary
  file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - path: /usr/bin/kubelet
      url_is_set: "{{ binary_kubelet_url is defined }}"
    - path: /usr/bin/kubectl
      url_is_set: "{{ binary_kubectl_url is defined }}"
    - path: /usr/bin/kubeadm
      url_is_set: "{{ binary_kubeadm_url is defined }}"
  when: >
    item.url_is_set and
    (not download_complete_semaphor.stat.exists|bool or binary_install_force_redownload)

- name: Download kubelet/kubectl/kubeadm
  get_url:
    url: "{{ item.use_url }}"
    dest: "{{ item.to_path }}"
    mode: 0755
    force: "{{ binary_install_force_redownload }}"
  when: binary_kubelet_url is defined
  with_items:
    - use_url: "{{ binary_kubelet_url }}"
      to_path: "/usr/bin/kubelet"
    - use_url: "{{ binary_kubeadm_url }}"
      to_path: "/usr/bin/kubeadm"
    - use_url: "{{ binary_kubectl_url }}"
      to_path: "/usr/bin/kubectl"

- name: Mark download complete
  file:
    path: "{{ kubectl_home }}/.kube-binary-download-complete"
    state: directory
