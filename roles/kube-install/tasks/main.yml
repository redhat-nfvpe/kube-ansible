---
# Setup variables
- include: variables.yml

- name: "Disable SELinux :("
  selinux:
    state: disabled

- name: "Stop iptables :("
  service:
    name: "{{ __firewall_service }}"
    state: stopped
  ignore_errors: yes

- name: "Disable iptables :("
  service:
    name: "{{ __firewall_service }}"
    enabled: no
  ignore_errors: yes

- name: Template kube RPM repo
  template:
    src: kubernetes.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo

- name: Install optional packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - nano

# The kube_version variable can be from this list...
# That is, the `yum search kubelet --showduplicates`
# (as of 8/9/17)
#
# e.g. you would use "1.6.6-0" for kube 1.6.6
#
# kubelet-1.5.4-0.x86_64 : Container cluster management
# kubelet-1.6.0-0.x86_64 : Container cluster management
# kubelet-1.6.1-0.x86_64 : Container cluster management
# kubelet-1.6.2-0.x86_64 : Container cluster management
# kubelet-1.6.3-0.x86_64 : Container cluster management
# kubelet-1.6.4-0.x86_64 : Container cluster management
# kubelet-1.6.5-0.x86_64 : Container cluster management
# kubelet-1.6.6-0.x86_64 : Container cluster management
# kubelet-1.6.7-0.x86_64 : Container cluster management
# kubelet-1.7.0-0.x86_64 : Container cluster management
# kubelet-1.7.1-0.x86_64 : Container cluster management
# kubelet-1.7.2-0.x86_64 : Container cluster management
# kubelet-1.7.3-1.x86_64 : Container cluster management
# kubelet-1.7.3-1.x86_64 : Container cluster management

- name: Default kube version fact
  set_fact:
    kube_version_parameter: ""

- name: Set kube version fact to specific version when specified
  set_fact:
    kube_version_parameter: "-{{ kube_version }}"
  when: kube_version != "latest"

- name: Install required packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - kubectl{{ kube_version_parameter }}
    - kubelet{{ kube_version_parameter }}
    - kubeadm{{ kube_version_parameter }}
    - kubernetes-cni

- name: Install CNI plugins 0.6.0 for ipv6
  shell: |
    ARCHIVE=cni-plugins-amd64-v0.6.0.tgz
    mkdir -p /opt/cni/bin
    cd /opt/cni/bin
    rm -f *
    sudo curl -SLO https://github.com/containernetworking/plugins/releases/download/v0.6.0/$ARCHIVE
    if sudo tar -xzvf $ARCHIVE; then
      sudo rm $ARCHIVE
    fi
  when: ipv6

- name: Optionally include playbook for binary install
  include: binary_install.yml
  when: binary_install

- name: Install docker (when using docker mode)
  package:
    name: "docker"
    state: present
  when: "container_runtime == 'docker'"

- name: Include kube 1.6.0 work-around
  include: kube-16-workaround.yml
  when: kube_16_workaround

- name: Remove default kubadm.conf ExecStart
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: 'KUBELET_EXTRA_ARGS$'
    state: absent

- name: Add custom kubadm.conf ExecStart
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: 'systemd$'
    line: 'ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_EXTRA_ARGS --cgroup-driver=systemd'
  notify: "restart kubelet"

- name: Change cluster dns ip in kubadm.conf for ipv6
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: 'cluster-dns'
    line: 'Environment="KUBELET_DNS_ARGS=--cluster-dns=fd00:1234::10 --cluster-domain=cluster.local"'
  notify: "restart kubelet"
  when: ipv6

- name: make sure kubelet is started and enabled
  service:
    name: "kubelet"
    state: started
    enabled: yes

- name: Start docker when appropriate
  service:
    name: "docker"
    state: started
    enabled: yes
  when: "container_runtime == 'docker'"
