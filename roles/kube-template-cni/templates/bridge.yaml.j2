---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bridge
  namespace: kube-system
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-bridge-cfg
  namespace: kube-system
  labels:
    tier: node
    app: bridge
data:
  cni-conf.json: |
    {
      "name": "bridge0",
      "type": "bridge",
      "bridge": "cni0",
      "hairpiniMode": true, 
      "ipam": {
        "type": "dhcp",
        "routes": [ { "dst": "0.0.0.0/0" } ]
      },
      "dns": {
        "nameservers": [ "192.168.122.1" ]
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-bridge-ds
  namespace: kube-system
  labels:
    tier: node
    app: bridge
spec:
  template:
    metadata:
      labels:
        tier: node
        app: bridge
    spec:
      hostNetwork: true
      # nodeSelector:
      #  beta.kubernetes.io/arch: amd64
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccountName: bridge
      containers:
      - name: install-cni
        image: alpine:3.6
        command: [ "/bin/sh", "-c", "set -e -x; cp -f /etc/kube-bridge/cni-conf.json /etc/cni/net.d/10-bridge.conf; while true; do sleep 3600; done" ]
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        - name: bridge-cfg
          mountPath: /etc/kube-bridge/
      - name: cni-dhcp-daemon
        image: docker.io/s1061123/cni-dhcp-daemon:v0.6.0mod3
        volumeMounts:
        - name: run
          mountPath: /run
        - name: proc
          mountPath: /host/proc
        securityContext:
          privileged: true
      volumes:
        - name: run
          hostPath:
            path: /run
        - name: proc
          hostPath:
            path: /proc
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: bridge-cfg
          configMap:
            name: kube-bridge-cfg
