---
# Some (lots!) borrowed from https://github.com/cri-o/cri-o-ansible

- name: Add CRI-O repo
  yum_repository:
    name: crio
    description: cri-o container runtime repo
    baseurl: "{{ crio_baseurl }}"
    gpgcheck: no

- name: Install CRI-O
  yum:
    name: cri-o
    state: present
    disable_gpg_check: yes

- name: patch crio-wipe/lib.bash
  block:
    - name: change new
      replace: >-
        dest='/usr/libexec/crio/crio-wipe/lib.bash'
        regexp='new=\$\(\(\"\$1\" \+ 0\)\)'
        replace='new=$(($1 + 0))'
    - name: change old
      replace: >-
        dest='/usr/libexec/crio/crio-wipe/lib.bash'
        regexp='old=\$\(\(\\"\$2\" \+ 0\)\)'
        replace='old=$(($2 + 0))'
  when:
    - ansible_distribution == "CentOS"


- name: enable and start CRI-O
  systemd:
    name: crio
    state: started
    enabled: yes
    daemon_reload: yes

- name: remove default CNI for further k8s cni plugin install
  file:
    path: /etc/cni/net.d
    state: absent

- name: re-create default CNI for further k8s cni plugin install
  file:
    path: /etc/cni/net.d
    state: directory

- name: modprobe br_netfilter
  modprobe:
    name: br_netfilter
    state: present

- name: tune sysctl
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    reload: yes
    state: present
    sysctl_set: yes
    sysctl_file: /etc/sysctl.conf

- name: Make directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
       - /etc/systemd/system/kubelet.service.d/

- name: systemd dropin for kubeadm # noqa 301
  shell: >
          sh -c 'echo "[Service]
          Environment=\"KUBELET_EXTRA_ARGS=--cgroup-driver=systemd
          --container-runtime=remote --runtime-request-timeout=15m
          --image-service-endpoint /var/run/crio/crio.sock
          --container-runtime-endpoint /var/run/crio/crio.sock\"" > /etc/systemd/system/kubelet.service.d/0-crio.conf'

- name: flush iptables
  iptables:
    chain: "{{ item }}"
    flush: yes
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
