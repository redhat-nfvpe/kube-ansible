---
# Some (lots!) borrowed from https://github.com/cri-o/cri-o-ansible

- name: Create a path for us
  set_fact:
    extended_path: "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/centos/.local/bin:/home/centos/bin/:/usr/local/go/bin"

- name: Install required packages for cri-o
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - wget
    - git
    - make
    - gcc
    - tar
    - libseccomp-devel
    - glib2-devel
    - glibc-static
    - container-selinux
    - btrfs-progs-devel
    - device-mapper-devel
    - glibc-devel
    - gpgme-devel
    - libassuan-devel
    - libgpg-error-devel
    - pkgconfig
    - json-glib-devel
    - skopeo-containers
    - ostree
    - ostree-devel
    - iptables

- name: Make directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
       - /etc/systemd/system/kubelet.service.d/
       - /var/lib/etcd
       - /etc/cni/net.d
       - /etc/containers

- name: clone runc
  git:
    repo: https://github.com/opencontainers/runc
    dest: "{{ ansible_env.HOME }}/{{ gopath }}/src/github.com/opencontainers/runc"
    version: master

- name: clone CRI-O
  git:
    repo: https://github.com/cri-o/cri-o.git
    dest: "{{ ansible_env.HOME }}/{{ gopath }}/src/github.com/cri-o/cri-o"
    version: "{{ crio_version }}"

- name: clone cri-tools
  git:
    repo: https://github.com/kubernetes-sigs/cri-tools.git
    dest: "{{ ansible_env.HOME }}/{{ gopath }}/src/github.com/kubernetes-sigs/cri-tools"
    version: "{{ crio_version }}"

- name: clone CNI
  git:
    repo: https://github.com/containernetworking/plugins
    dest: "{{ ansible_env.HOME }}/{{ gopath }}/src/github.com/containernetworking/plugins"
    version: master

- name: build runc
  shell: |
          cd {{ ansible_env.HOME }}/{{ gopath }}/src/github.com/opencontainers/runc && \
          export GOPATH={{ ansible_env.HOME}}/{{ gopath }} && \
          make BUILDTAGS="seccomp selinux" && make install
  environment:
    PATH: "{{ extended_path }}"

- name: link runc
  file:
    src: /usr/local/sbin/runc
    dest: /usr/bin/runc
    state: link

- name: build cri-o
  shell: |
          cd {{ ansible_env.HOME }}/{{ gopath }}/src/github.com/cri-o/cri-o && \
          make && \
          make install && \
          make install.systemd && \
          make install.config
  environment:
    PATH: "{{ extended_path }}"
    GO111MODULE: "off"
    GOPATH: "{{ ansible_env.HOME}}/{{ gopath }}"

- name: build cri-tools
  shell: |
          cd {{ ansible_env.HOME }}/{{ gopath }}/src/github.com/kubernetes-sigs/cri-tools && \
          make && \
          make install
  environment:
    PATH: "{{ extended_path }}"

- name: build CNI stuff
  shell: |
          cd {{ ansible_env.HOME }}/{{ gopath }}/src/github.com/containernetworking/plugins && \
          ./build_linux.sh && \
          mkdir -p /opt/cni/bin && \
          cp bin/* /opt/cni/bin/
  environment:
    PATH: "{{ extended_path }}"

- name: run CRI-O with systemd cgroup manager
  replace:
    regexp: 'cgroupfs'
    replace: 'systemd'
    name: /etc/crio/crio.conf
    backup: yes

- name: enable and start CRI-O
  systemd:
    name: crio
    state: started
    enabled: yes
    daemon_reload: yes

- name: modprobe br_netfilter
  command: "modprobe br_netfilter"
  ignore_errors: true

# TODO: see if we can switch to the 'sysctl' module here
- name: tune sysctl
  lineinfile:
    line: "net/bridge/bridge-nf-call-iptables = 1"
    dest: /etc/sysctl.conf
    insertafter: 'EOF'
    regexp: '\/net\/bridge\/bridge-nf-call-iptables = 1'
    state: present
  ignore_errors: true

- name: reload sysctl
  command: "sysctl -p"
  ignore_errors: true

- name: systemd dropin for kubeadm
  shell: |
          sh -c 'echo "[Service]
          Environment=\"KUBELET_EXTRA_ARGS=--container-runtime=remote --runtime-request-timeout=15m --image-service-endpoint /var/run/crio/crio.sock --container-runtime-endpoint /var/run/crio/crio.sock\"" > /etc/systemd/system/kubelet.service.d/0-crio.conf'

- name: flush iptables
  command: "iptables -F"
