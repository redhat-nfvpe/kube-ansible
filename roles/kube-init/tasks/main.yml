---
# Alright we're using the kubeadm init
# You can reset this with:
#  [root@kube-master centos]# kubeadm --help | grep reset
#    reset       Run this to revert any changes made to this host by 'kubeadm init' or 'kubeadm join'.

- name: Default primary kubeadm argument
  set_fact:
    arg_primary: ""

- name: Set pod-network-cidr when flannel
  set_fact:
    arg_primary: "--pod-network-cidr {{ pod_network_cidr }}/16"
  when: pod_network_type != "weave" and not ipv6_enabled

- name: Use config file for ipv6 for pod-network-cidr
  set_fact:
    arg_primary: "--config=/root/kubeadm_v6.cfg"
  when: ipv6_enabled

- name: Use config file for control plane listen on all addresses
  set_fact:
    arg_primary: "--config=/root/kubeadm.cfg"
  when: control_plane_listen_all

- name: create kubeadm_v6.cfg
  copy:
    src: kubeadm_v6.cfg
    dest: /root/kubeadm_v6.cfg
  when: ipv6_enabled

- name: create kubeadm config file
  template:
    src: kubeadm.cfg.j2
    dest: /root/kubeadm.cfg
  when: control_plane_listen_all

- name: Default cri-o flags to empty
  set_fact:
    arg_crio: ""

- name: Set cri-o flags
  set_fact:
    arg_crio: "--skip-preflight-checks"
  when: container_runtime == "crio"

- name: Default k8s version to empty
  set_fact:
    k8s_version: ""

- name: Set custom Kubernetes version when installing via artifacts
  set_fact:
    k8s_version: "--kubernetes-version {{ kube_version }}"
  when: artifacts_install

# Was trying to use flannel and running with:
#     kubeadm init > /etc/kubeadm.init.txt
# abandonded for now...
- name: Run kubeadm init
  shell: >
    kubeadm init {{ k8s_version }} {{ arg_crio }} {{ arg_primary }} > /var/log/kubeadm.init.log
  args:
    creates: /etc/.kubeadm-complete

- name: Mark init complete
  file:
    path: /etc/.kubeadm-complete
    state: directory

- name: Get join command
  shell: >
    cat /var/log/kubeadm.init.log | grep "kubeadm join"
  register: kubeadm_join_output

- name: Set fact with join command
  set_fact:
    kubeadm_join_command: "{{ kubeadm_join_output.stdout }}"

# -------- Copy in admin.conf

# ---- Kube 1.6, apparently you can't use kubectl as root? weird/awesome.

  # sudo cp /etc/kubernetes/admin.conf $HOME/
  # sudo chown $(id -u):$(id -g) $HOME/admin.conf
  # export KUBECONFIG=$HOME/admin.conf

- name: Ensure .kube folder exists
  file:
    path: "{{ kubectl_home }}/.kube/"
    state: directory
    owner: "{{ kubectl_user }}"
    group: "{{ kubectl_group }}"
    mode: 0755

- name: Copy admin.conf to kubectl user's home
  shell: >
    cp -f /etc/kubernetes/admin.conf {{ kubectl_home }}/.kube/admin.conf
  args:
    creates: "{{ kubectl_home }}/admin.conf"

- name: Set admin.conf ownership
  file:
    path: "{{ kubectl_home }}/.kube/admin.conf"
    owner: "{{ kubectl_user }}"
    group: "{{ kubectl_group }}"

- name: Add KUBECONFIG env for admin.conf to .bashrc
  lineinfile:
    dest: "{{ kubectl_home }}/.bashrc"
    regexp: "KUBECONFIG"
    line: "export KUBECONFIG={{ kubectl_home }}/.kube/admin.conf"
