---
- import_playbook: ka-init/init.yml
- import_playbook: ka-lab-ipv6/ipv6-lab.yml
  when: ipv6_enabled

- hosts: all
  tasks:
    - set_fact: 
        skip_init: false
      when: skip_init is undefined

- hosts: master,nodes
  become: true
  become_user: root
  tasks: []
  roles:
    - { role: bridge-setup,
        when: pod_network_type == 'bridge' or pod_network_type == 'kokonet-bridge' }
    - { role: kokonet-setup, when: pod_network_type == 'kokonet-bridge' }
    - { role: npwg-poc1-setup, when: pod_network_type == 'multus' and multus_npwg_demo }
    - { role: optional-packages }
    - { role: install-go, when: container_runtime == 'crio' }
    # You can add "crio_force: true" if you need to run the builds again.
    - { role: cri-o-install, when: container_runtime == 'crio', crio_force: false }
    - { role: buildah-install, when: container_runtime == 'crio' }
    - { role: install-docker, when: container_runtime == 'docker' }
    - { role: kube-install }
    - { role: multus-cni, when: pod_network_type == "multus" }
    - { role: install-go, when: enable_userspace_cni }
    - { role: userspace-cni, when: enable_userspace_cni }
    - { role: ehost-device-cni, when: enable_ehost_device_cni }
    - { role: virt-network-device-plugin, when: enable_virt_network_device_plugin }

- import_playbook: ka-lab-kokonet/kokonet-lab.yml
  when: pod_network_type == 'kokonet-bridge'

- hosts: master,nodes
  become: true
  become_user: root
  tasks:
    - name: Set bridge-nf-call-iptables to 1
      shell: >
        if [ ! -f /proc/sys/net/bridge/bridge-nf-call-iptables ]; then \
          modprobe br_netfilter; \
        fi && \
        echo "1" > /proc/sys/net/bridge/bridge-nf-call-iptables
      ignore_errors: true

- hosts: master
  become: true
  become_user: root
  # pre_tasks:
  #   - debug:
  #       msg: "Skip init? {{ skip_init }}"
  roles:
    - { role: kube-init, when: "not skip_init" }
    - { role: kube-template-cni, when: "not skip_init" }

- hosts: master
  tasks: []
  roles:
    - { role: kube-cni, when: "not skip_init" }
    - { role: kube-niceties }


- hosts: master
  tasks: []
  roles:
    - { role: multus-crd, when: "pod_network_type == 'multus' and multus_use_crd and not multus_npwg_demo and not skip_init"}

- hosts: nodes
  become: true
  become_user: root
  pre_tasks:
    - name: Get kubeadm_join_command from master
      set_fact:
        kubeadm_join_command: "{{ hostvars[groups['master'][0]]['kubeadm_join_command'] }}"
  tasks: []
  roles:
    - { role: kube-join-cluster, when: "not skip_init" }

- hosts: master
  become: true
  become_user: root
  tasks: []
  roles:
    - { role: kubectl-proxy-systemd, when: "not skip_init" }
